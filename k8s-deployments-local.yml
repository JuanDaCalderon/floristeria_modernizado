###################################
# BASE DE DATOS
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: "123456"

---
kind: Service
apiVersion: v1
metadata:
  name: servicio-postgres
  annotations:
    cloud.google.com/backend-config: '{"default": "postgres-config"}'
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---

###################################
# CLIENTES
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clientes
  labels:
    app: clientes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clientes
  template:
    metadata:
      labels:
        app: clientes
    spec:
      containers:
        - name: clientes
          image: localhost:5000/clientes:v1
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_PORT
            - name: "DB_NAME_CLIENTE"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_NAME_CLIENTE
            - name: "SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: SECRET_KEY
          ports:
            - containerPort: 8000
          imagePullPolicy: Always

---
kind: Service
apiVersion: v1
metadata:
  name: servicio-clientes
  annotations:
    cloud.google.com/backend-config: '{"default": "clientes-config"}'
spec:
  type: NodePort
  selector:
    app: clientes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      nodePort: 31002

---
###################################
# PEDIDOS
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pedidos
  labels:
    app: pedidos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pedidos
  template:
    metadata:
      labels:
        app: pedidos
    spec:
      containers:
        - name: pedidos
          image: localhost:5000/pedidos:v1
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_USER
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_PASSWORD
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_HOST
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_PORT
            - name: "DB_NAME_PEDIDO"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: DB_NAME_PEDIDO
            - name: "CLIENTE_HOST"
              valueFrom:
                secretKeyRef:
                  name: floristeriasecrets 
                  key: CLIENTE_HOST
          ports:
            - containerPort: 8001
          imagePullPolicy: Always


---
kind: Service
apiVersion: v1
metadata:
  name: servicio-pedidos
  annotations:
    cloud.google.com/backend-config: '{"default": "pedidos-config"}'
spec:
  type: NodePort
  selector:
    app: pedidos
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8001
      nodePort: 31001


###################################
# INGRESS
###################################
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  labels:
    name: gateway-ingress
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /cliente
        backend:
          service:
            name: servicio-clientes
            port: 
              number: 80
      - pathType: Prefix
        path: /pedido
        backend:
          service:
            name: servicio-pedidos
            port: 
              number: 80